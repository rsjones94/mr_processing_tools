!!ARBfp1.0
#
# Fragment program used for rendering GLMesh instances.
#
# Input parameters:
#
#   settings - Vector containing four settings:
#               1. -1 to use the negCmap texture for negative values,
#                  or +1 to only use the cmap texture.
#               2. -1 to invert clipping, +1 for normal clipping
#               3. Low clipping value
#               4. High clipping value
#
#   cmapXform - Transformation matrix which transforms vertex
#               data into colour map texture coordinates.
#     
# Input textures:
#   cmap    - 1D texture for vertex colouring
#   negCmap - 1D texture for colouring vertices with negative values,
#             if the negative colour map is enabled.
#
# Input varyings:
#   vertexData - Data value associated with each vertex.
#
# Author: Paul McCarthy <pauldmccarthy@gmail.com> 
#

# x will contain -1 if we should
# use the negative colour map
# (useNegCmap is true, *and* the
# vertex value is negative), or
# +1 otherwise.
TEMP useNegCmap;

# Used to store the results of
# the clipping test - x will
# contain a negative value if
# the vertex data is below the
# low clipping range, and y
# will contain a negative value
# if the vertex data is above
# the high clipping range.
TEMP clip;

# x is used to store and
# manipulate the vertex data
TEMP vertexData;

# Used to store the
# cmap/negCmap colours
TEMP colour;
TEMP negColour;

PARAM settings     = {{ param_settings     }};
PARAM cmapXform[4] = {{ param4_cmapXform   }};
MOV   vertexData.x,  {{ varying_vertexData }}.x;

# Set the useNegCmap.x flag to -1
# if negCmap is on (settings.x)
# and the vertex value is negative,
# +1 otherwise.
MOV useNegCmap.x, settings.x;
CMP useNegCmap.y, vertexData.x, -1, 1;
ADD useNegCmap.x, useNegCmap.x, useNegCmap.y;
CMP useNegCmap.x, useNegCmap.x, -1, 1;

# If useNegCmap is true, make
# the vertex data positive
MUL vertexData.x, vertexData.x, useNegCmap.x;

# Clipping - tets the vertex value against
# the low/high clipping ranges. Multiply
# the results of the two clipping tests -
# clip.x will be positive if the value is
# inside the clipping range, and negative
# if it is out. 
SUB clip.x, vertexData.x, settings.z;
SUB clip.y, settings.w,   vertexData.x;
MUL clip.x, clip.x, clip.y;

# If invert clipping is active
# (settings.y), invert the sign
# of the above clip tests. 
MUL clip.x, clip.x, settings.y;

# Kill the fragment if either
# of the clip tests fail
KIL clip.x;

# Transform the vertex data
# into cmap coordinates
MAD vertexData, vertexData, cmapXform[0].x, cmapXform[3].x;

# Retrieve the normal/negative colours.
TEX colour,    vertexData, {{ texture_cmap    }}, 1D;
TEX negColour, vertexData, {{ texture_negCmap }}, 1D;

# Output the appropriate colour
CMP result.color, useNegCmap.x, negColour, colour;

END
